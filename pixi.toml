[workspace]
name = "iMODforge"
channels = ["conda-forge", "bioconda"]
platforms = ["win-64"]

[dependencies]
pixi-pack = ">=0.5.0,<2"
dotnet-sdk = ">=9.0.202,<10"

[feature.imodforge.dependencies]
python = "3.12.*"
imod = "*"
ribasim = "*"
xugrid = "*"

numpy = "*"
matplotlib = "*"
pandas = "*"
geopandas = "*"
rasterio = "*"
shapely = "*"
xarray = "*"
snakemake = "*"
jupyter = "*"

# prevent GPL packages to be included
libarchive = { version = "*", build = "lgpl*" }
libspatialite = { version = "*", build = "lgpl*" }
ffmpeg = { version = "*", build = "lgpl_*" }
spyder-kernels = ">=3.1.0,<4"

[tasks.update-lockfile]
args = ["environment"]
cmd = "pixi update -e {{ environment }}"

[tasks.build]
args = ["environment"]
cmd = "IMOD_VERSION=$(powershell ./get_package_version.ps1 imod) && dotnet build {{ environment }} -c Release -p:iMODVersion=$IMOD_VERSION"

[tasks.test-install]
args = ["environment"]
cmd = "msiexec /passive /i {{ environment }}\\bin\\Release\\en-us\\{{ environment }}.msi /lv install.log"

[tasks.test-uninstall]
args = ["environment"]
cmd = "msiexec /passive /x {{ environment }}\\bin\\Release\\en-us\\{{ environment }}.msi /lv uninstall.log"

[tasks.pack]
args = ["environment"]
cmd = "pixi-pack pack --environment {{ environment }} --output-file {{ environment }}\\obj\\{{ environment }}.tar"

# TODO: Pixi 0.47 will be able to pass arguments as {{ environment}} into tasks.
# https://github.com/prefix-dev/pixi/issues/3538
# Then it will be possible to just have a task called "create".
# [tasks.create]
# args = ["environment"]
# depends-on = [
#     { task = "update-lockfile", args = [
#         "{{ environment }}",
#     ] },
#     { task = "pack", args = [
#         "{{ environment }}",
#     ] },
#     { task = "build", args = [
#         "{{ environment }}",
#     ] },
# ]

[tasks]
create-imodforge = { depends-on = [
    { task = "update-lockfile", args = [
        "imodforge",
    ] },
    { task = "pack", args = [
        "imodforge",
    ] },
    { task = "build", args = [
        "imodforge",
    ] },
] }
imod-version = "IMOD_VERSION=$(powershell ./get_package_version.ps1 imod) && echo $IMOD_VERSION"

[environments]
imodforge = { features = ["imodforge"], no-default-feature = true }
